--<3>25자 이상의 책이름 출력
SELECT BOOK_NM
FROM TB_BOOK
WHERE LENGTH(BOOK_NM)>=25;

--<4> 휴대폰 번호가 019로 시작하는 작가 이름순 정렬 가장 첫번째 사람 출력

SELECT WRITER_NM,MOBILE_NO
FROM (SELECT WRITER_NM,MOBILE_NO
      FROM TB_WRITER
      WHERE MOBILE_NO LIKE '019%'
      ORDER BY WRITER_NM)
WHERE ROWNUM = 1;

--<5> 저작 형태가 옮김에 해당하는 작가들
SELECT WRITER_NM 작가명
FROM TB_BOOK_AUTHOR A, 
     TB_WRITER W
WHERE A.WRITER_NO = W.WRITER_NO  
AND COMPOSE_TYPE = '옮김';

--ANSI
SELECT WRITER_NM 작가명
FROM TB_BOOK_AUTHOR
JOIN TB_WRITER USING(WRITER_NO)
WHERE COMPOSE_TYPE = '옮김';


--<6> 300권 이상 등록된 도서의 저작
SELECT COMPOSE_TYPE
      ,COUNT(COMPOSE_TYPE) 
FROM TB_BOOK TB
    ,TB_BOOK_AUTHOR TBA
WHERE TB.BOOK_NO = TBA.BOOK_NO
GROUP BY COMPOSE_TYPE
HAVING COUNT(COMPOSE_TYPE)>=300;

--ANSI
SELECT COMPOSE_TYPE
      ,COUNT(COMPOSE_TYPE) 
FROM TB_BOOK
JOIN TB_BOOK_AUTHOR USING(BOOK_NO)
GROUP BY COMPOSE_TYPE
HAVING COUNT(COMPOSE_TYPE)>300;

--<7>
SELECT BOOK_NM 
     , ISSUE_DATE 
     , PUBLISHER_NM
FROM(    
SELECT TB.BOOK_NM 
     , TB.ISSUE_DATE 
     , TP.PUBLISHER_NM
FROM TB_BOOK TB
    ,TB_PUBLISHER TP
WHERE TB.PUBLISHER_NM=TP.PUBLISHER_NM 
ORDER BY TB.ISSUE_DATE DESC
)
WHERE ROWNUM = 1;

--ANSI

SELECT BOOK_NM 
     , ISSUE_DATE 
     , PUBLISHER_NM
FROM(     
SELECT TB.BOOK_NM 
     , TB.ISSUE_DATE 
     , TP.PUBLISHER_NM
FROM TB_BOOK TB
JOIN TB_PUBLISHER TP ON(TB.PUBLISHER_NM = TP.PUBLISHER_NM)
ORDER BY TB.ISSUE_DATE DESC    
    ) 
WHERE ROWNUM = 1;

--<8> ORACLE
SELECT 작가이름
     , "권 수"
FROM(
SELECT TW.WRITER_NM 작가이름
       ,COUNT(TBA.WRITER_NO) "권 수"
FROM TB_BOOK TB
  ,  TB_BOOK_AUTHOR TBA
  ,  TB_WRITER TW
WHERE  TB.BOOK_NO = TBA.BOOK_NO
AND    TBA.WRITER_NO = TW.WRITER_NO
GROUP BY TBA.WRITER_NO,TW.WRITER_NM
ORDER BY COUNT(TBA.WRITER_NO) DESC)
WHERE ROWNUM <= 3;

--ANSI
SELECT  작가이름
       ,"권 수"
FROM(
SELECT TW.WRITER_NM 작가이름
      ,COUNT(WRITER_NO) "권 수"
FROM TB_BOOK TB
JOIN TB_BOOK_AUTHOR TBA USING (BOOK_NO)
JOIN TB_WRITER TW USING (WRITER_NO)
GROUP BY TW.WRITER_NM
ORDER BY COUNT(WRITER_NO) DESC
)
WHERE ROWNUM <= 3;


--<9> ANSI
UPDATE TB_WRITER TW1
SET TW1.REGIST_DATE = (SELECT MIN(TB.ISSUE_DATE)
                              FROM TB_BOOK TB 
                              FULL JOIN TB_BOOK_AUTHOR TBA ON ( TB.BOOK_NO=TBA.BOOK_NO )
                              FULL JOIN TB_WRITER TW ON (TBA.WRITER_NO=TW.WRITER_NO)
                              WHERE TW1.WRITER_NO=TW.WRITER_NO
                              GROUP BY TW.WRITER_NO,WRITER_NM);

--ORACLE
UPDATE TB_WRITER TW1
SET TW1.REGIST_DATE = (SELECT MIN(TB.ISSUE_DATE)
                       FROM TB_BOOK TB
                           ,TB_BOOK_AUTHOR TBA
                           ,TB_WRITER TW
                       WHERE TB.BOOK_NO=TBA.BOOK_NO
                       AND   TBA.WRITER_NO=TW.WRITER_NO
                       AND   TW1.WRITER_NO=TW.WRITER_NO 
                       GROUP BY TW.WRITER_NO,WRITER_NM);
                       ROLLBACK;

COMMIT;

--<10>
CREATE TABLE TB_BOOK_TANSLATOR (

BOOK_NO VARCHAR2(10) NOT NULL CONSTRAINT PK_BOOK_TRANSLTOR PRIMARY KEY  
                     CONSTRAINT FK_BOOK_TANSLATOR_01 REFERENCES TB_BOOK(BOOK_NO),
WRITER_NO VARCHAR2(10) NOT NULL CONSTRAINT FK_BOOK_TRANSLATOR_02 REFERENCES TB_WRITER(WRITER_NO),
TRANS_LANG VARCHAR2(60)

);


--<11>
INSERT ALL 
INTO TB_BOOK_TANSLATOR VALUES (BOOK_NO,WRITER_NO,NULL)
SELECT BOOK_NO,WRITER_NO
FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IN ('옮김','역주','편역','공역');

DELETE FROM TB_BOOK_AUTHOR
WHERE COMPOSE_TYPE IN ('옮김','역주','편역','공역');

--<12>
SELECT TB.BOOK_NM
      ,TW.WRITER_NM
FROM TB_BOOK TB
    ,TB_BOOK_TRANSLATOR TBT
    ,TB_WRITER TW
WHERE TB.BOOK_NO=TBT.BOOK_NO
AND   TBT.WRITER_NO = TW.WRITER_NO
AND   SUBSTR(TBT.BOOK_NO,1,4)='2007';

--ANSI

SELECT BOOK_NM
     , WRITER_NM
FROM TB_BOOK TB
JOIN TB_BOOK_TRANSLATOR TBT ON(TB.BOOK_NO=TBT.BOOK_NO)
JOIN TB_WRITER TW ON(TBT.WRITER_NO = TW.WRITER_NO)
WHERE SUBSTR(TB.BOOK_NO,1,4)='2007';


--<13>  아직 안배움



--<14>
INSERT INTO TB_PUBLISHER(PUBLISHER_NM,PUBLISHER_TELNO) VALUES('춘 출판사','02-6710,3737');

--<15> 동명이인 찾기
SELECT WRITER_NM,COUNT(WRITER_NM)
FROM TB_WRITER
GROUP BY WRITER_NM
HAVING COUNT(WRITER_NM)>1;

--<16>
UPDATE TB_BOOK_AUTHOR
SET COMPOSE_TYPE = '지음'
WHERE COMPOSE_TYPE IS NULL;

--<17>
SELECT TW.WRITER_NM,
       TW.OFFICE_TELNO
FROM TB_WRITER TW
    ,TB_PUBLISHER TP
    ,TB_BOOK TB
WHERE TW.REGIST_DATE = TB.ISSUE_DATE
AND   TB.PUBLISHER_NM=TP.PUBLISHER_NM
AND   SUBSTR(TW.OFFICE_TELNO,1,2) = '02'
OR    SUBSTR(TW.OFFICE_TELNO,1,3) NOT LIKE '-'
GROUP BY TW.WRITER_NM,TW.OFFICE_TELNO;

--ANSI
SELECT TW.WRITER_NM,
       TW.OFFICE_TELNO
FROM TB_WRITER TW
JOIN TB_BOOK TB ON (REGIST_DATE = ISSUE_DATE)
JOIN TB_PUBLISHER TP USING (PUBLISHER_NM)
WHERE SUBSTR(TW.OFFICE_TELNO,1,2) = '02'
OR    SUBSTR(TW.OFFICE_TELNO,1,3) NOT LIKE '-'
GROUP BY TW.WRITER_NM,TW.OFFICE_TELNO;


--<18>
SELECT WRITER_NM,FLOOR(MONTHS_BETWEEN(TO_DATE(200601,'YYYYMM'),REGIST_DATE)/12) 연차
FROM TB_WRITER
WHERE FLOOR(MONTHS_BETWEEN(TO_DATE(200601,'YYYYMM'),REGIST_DATE)/12)>=30;

--<19>
SELECT BOOK_NM
     , PRICE
     ,
CASE WHEN STOCK_QTY<5  THEN '추가주문필요'
     ELSE '소량보유'
     END "보유량"
FROM TB_BOOK
WHERE PUBLISHER_NM='황금가지'
AND STOCK_QTY<10;

--<20>
SELECT TB.BOOK_NM
      ,TW.WRITER_NM
FROM TB_BOOK  TB
   , TB_WRITER TW
   , TB_BOOK_TRANSLATOR TBT
WHERE BOOK_NM = '아타트롤'
AND TB.BOOK_NO = TBT.BOOK_NO
AND TBT.WRITER_NO = TW.WRITER_NO;

--ANSI
SELECT TB.BOOK_NM
      ,TW.WRITER_NM
FROM TB_BOOK TB
JOIN TB_BOOK_TRANSLATOR TBT USING(BOOK_NO)
JOIN TB_WRITER TW USING (WRITER_NO)
WHERE BOOK_NM = '아타트롤';


--<21>
SELECT BOOK_NM 도서명
      ,STOCK_QTY 재고수량
      ,PRICE "가격(org)"
      ,PRICE*0.8 "가격(NEW)"
FROM TB_BOOK
WHERE MONTHS_BETWEEN(SYSDATE,ISSUE_DATE)/12>30
AND STOCK_QTY>=90;
   
COMMIT;

