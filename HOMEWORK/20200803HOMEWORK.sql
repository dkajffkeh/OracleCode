--<ADDITIONAL SELECT 함수>

--<1>
SELECT STUDENT_NO , STUDENT_NAME , ENTRANCE_DATE
FROM TB_STUDENT
WHERE DEPARTMENT_NO LIKE '%002%' ORDER BY ENTRANCE_DATE ASC;

--<2>
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME)^=3;

--<3>
--주민등록 번호가 2 초과면 2000년대 생임.
SELECT PROFESSOR_NAME,PROFESSOR_SSN,
CASE WHEN SUBSTR(PROFESSOR_SSN,8,1)>2 THEN FLOOR(MONTHS_BETWEEN(SYSDATE,20||TO_DATE(SUBSTR(PROFESSOR_SSN,1,6),'RRMMDD'))/12)
     ELSE FLOOR(MONTHS_BETWEEN(SYSDATE,19||TO_DATE(SUBSTR(PROFESSOR_SSN,1,6),'RRMMDD'))/12)
     END 만나이
FROM TB_PROFESSOR
ORDER BY 만나이 ASC;

--CASE WHEN SUBSTR(PROFESSOR_SSN,1,2)<50 THEN 19||TO_DATE()
--<4>
SELECT SUBSTR(PROFESSOR_NAME,2,2)
FROM TB_PROFESSOR;


--<5>
SELECT STUDENT_NO,STUDENT_NAME , FLOOR(MONTHS_BETWEEN(ENTRANCE_DATE,TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RRMMDD'))/12) 만나이
FROM TB_STUDENT
WHERE FLOOR(MONTHS_BETWEEN(ENTRANCE_DATE,TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RRMMDD'))/12)=19;

--<6> 

--<2000년도 이후 입학생 >
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE '%A%';

--<평점 구하는식>
SELECT ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

--<학과 번호화 학생수>
SELECT DEPARTMENT_NO 학과번호, COUNT(DEPARTMENT_NO)
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

--<지도교수를 배정받지 못한 학생수>
SELECT COUNT(*)-COUNT(COACH_PROFESSOR_NO) 솔로
FROM TB_STUDENT;

--<학번 입력시 평점 출력>
SELECT SUBSTR(TERM_NO,1,4) 년도 , ROUND(AVG(POINT),1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 1;

--<학과별 휴학생>
SELECT DEPARTMENT_NO , COUNT(DECODE(ABSENCE_YN,'Y',1))
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

--<동명이인 찾기>
SELECT STUDENT_NAME,COUNT(STUDENT_NAME)
FROM TB_STUDENT
WHERE STUDENT_NAME IN
(
SELECT STUDENT_NAME 
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(STUDENT_NAME)>1
)
GROUP BY STUDENT_NAME;


--<누적점수 구하기>
SELECT SUBSTR(TERM_NO,1,4) 년도 , SUBSTR(TERM_NO,6,1) 학기 ,ROUND(AVG(POINT),1) 평균
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,6,1));


